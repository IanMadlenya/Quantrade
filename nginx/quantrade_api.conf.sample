upstream api_apps {
    server 127.0.0.1:8003 fail_timeout=0;
}

server {
    listen          443 ssl;
    listen [::]:443; # ipv6only=on;
    server_name     api.<domain>;
    ssl on;
    charset     utf-8;
    #access_log      /var/log/nginx/api.<domain>_access.log combined;
    error_log       /var/log/nginx/api.<domain>_error.log error;

    ssl_certificate         /etc/letsencrypt/live/api.<domain>/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/api.<domain>/privkey.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security max-age=15768000;
    ssl_stapling on;
    ssl_stapling_verify on;

    location / {
        proxy_pass http://api_apps;

        proxy_redirect     off;

        proxy_cache_bypass  $http_cache_control;
        add_header X-Proxy-Cache $upstream_cache_status;

        proxy_set_header   Host              $http_host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto https;
    }

    location ^~ /.well-known {
        allow all;
        auth_basic off;
        alias /home/<folder>/.well-known/;
    }

}

server {
    listen 80;
    server_name api.<domain>;
    rewrite ^(.*) https://api.<domain>$1 permanent;
}

server {
    listen 80;
    server_name www.api.<domain>;
    rewrite ^(.*) https://api.<domain>$1 permanent;
}

server {
    listen 443;
    server_name www.api.<domain>;
    rewrite ^ https://api.<domain>$uri permanent;
}
